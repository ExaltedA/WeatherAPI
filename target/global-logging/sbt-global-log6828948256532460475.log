[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 13.0.2)
[debug]       Load.loadUnit: plugins took 141.3219ms
[debug]       Load.loadUnit: defsScala took 0.4399ms
[debug] [Loading] Scanning directory C:\Users\aldie\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.9916 ms
[debug]           Load.resolveProject(global-plugins) took 47.1432ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\aldie\.sbt\1.0\plugins, plugins: List(<none>))) took 99.0629ms
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.4322ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3596ms
[debug]     Load.loadUnit(file:/C:/Users/aldie/.sbt/1.0/plugins/, ...) took 276.753ms
[debug]   Load.apply: load took 461.9466ms
[debug]   Load.apply: resolveProjects took 7.4162ms
[debug]   Load.apply: finalTransforms took 62.6603ms
[debug]   Load.apply: config.delegates took 10.1064ms
[debug]   Load.apply: Def.make(settings)... took 1966.7537ms
[debug]   Load.apply: structureIndex took 116.7874ms
[debug]   Load.apply: mkStreams took 1.5261ms
[info] loading global plugins from C:\Users\aldie\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4571.1461ms
[debug]           Load.loadUnit: plugins took 34.0031ms
[debug]           Load.loadUnit: defsScala took 0.0078ms
[debug] [Loading] Scanning directory C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4939 ms
[debug]               Load.resolveProject(weatherapi-build) took 1.5876ms
[debug]             Load.loadTransitive: finalizeProject(Project(id weatherapi-build, base: C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, plugins: List(<none>))) took 4.6817ms
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, returning: (weatherapi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.3591ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0111ms
[debug]         Load.loadUnit(file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/project/, ...) took 43.0075ms
[debug]       Load.apply: load took 45.5123ms
[debug]       Load.apply: resolveProjects took 0.0928ms
[debug]       Load.apply: finalTransforms took 13.5127ms
[debug]       Load.apply: config.delegates took 0.373ms
[debug]       Load.apply: Def.make(settings)... took 107.8557ms
[debug]       Load.apply: structureIndex took 26.6229ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 539.0498ms
[debug]     Load.loadUnit: defsScala took 0.0166ms
[debug] [Loading] Scanning directory C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI
[debug]       Load.loadUnit: mkEval took 7.2024ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.69 ms
[info] loading settings for project weatherapi from build.sbt ...
[debug]         Load.resolveProject(weatherapi) took 2.8424ms
[debug]       Load.loadTransitive: finalizeProject(Project(id weatherapi, base: C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, plugins: List(<none>))) took 5.0485ms
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, returning: (weatherapi)
[debug]     Load.loadUnit: loadedProjectsRaw took 249.5237ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.7613ms
[debug]   Load.loadUnit(file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/, ...) took 836.047ms
[debug] Load.apply: load took 841.9227ms
[debug] Load.apply: resolveProjects took 0.143ms
[debug] Load.apply: finalTransforms took 10.6738ms
[debug] Load.apply: config.delegates took 0.3068ms
[debug] Load.apply: Def.make(settings)... took 120.0495ms
[debug] Load.apply: structureIndex took 25.0342ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to WeatherAPI (in build file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 2 Scala sources to C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\target\scala-2.13\classes ...
[info] done compiling
