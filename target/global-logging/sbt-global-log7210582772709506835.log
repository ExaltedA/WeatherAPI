[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 13.0.2)
[debug]       Load.loadUnit: plugins took 254.5435ms
[debug]       Load.loadUnit: defsScala took 0.396ms
[debug] [Loading] Scanning directory C:\Users\aldie\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.675 ms
[debug]           Load.resolveProject(global-plugins) took 76.5632ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\aldie\.sbt\1.0\plugins, plugins: List(<none>))) took 168.8613ms
[debug] [Loading] Done in C:\Users\aldie\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 206.33ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2787ms
[debug]     Load.loadUnit(file:/C:/Users/aldie/.sbt/1.0/plugins/, ...) took 489.284ms
[debug]   Load.apply: load took 1026.4365ms
[debug]   Load.apply: resolveProjects took 7.6228ms
[debug]   Load.apply: finalTransforms took 113.6295ms
[debug]   Load.apply: config.delegates took 12.4843ms
[debug]   Load.apply: Def.make(settings)... took 6626.7197ms
[debug]   Load.apply: structureIndex took 113.9942ms
[debug]   Load.apply: mkStreams took 2.123ms
[info] loading global plugins from C:\Users\aldie\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11014.8997ms
[debug]           Load.loadUnit: plugins took 35.8407ms
[debug]           Load.loadUnit: defsScala took 0.0073ms
[debug] [Loading] Scanning directory C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.8992 ms
[debug]               Load.resolveProject(weatherapi-build) took 1.9247ms
[debug]             Load.loadTransitive: finalizeProject(Project(id weatherapi-build, base: C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, plugins: List(<none>))) took 6.4339ms
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project, returning: (weatherapi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 11.6196ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.012ms
[debug]         Load.loadUnit(file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/project/, ...) took 49.871ms
[debug]       Load.apply: load took 51.789ms
[debug]       Load.apply: resolveProjects took 0.122ms
[debug]       Load.apply: finalTransforms took 12.6104ms
[debug]       Load.apply: config.delegates took 0.3935ms
[debug]       Load.apply: Def.make(settings)... took 131.2308ms
[debug]       Load.apply: structureIndex took 34.7186ms
[debug]       Load.apply: mkStreams took 0.0045ms
[info] loading project definition from C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 550.8529ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI
[debug]       Load.loadUnit: mkEval took 9.3804ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1985 ms
[info] loading settings for project weatherapi from build.sbt ...
[debug]         Load.resolveProject(weatherapi) took 6.869ms
[debug]       Load.loadTransitive: finalizeProject(Project(id weatherapi, base: C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, plugins: List(<none>))) took 11.4048ms
[debug] [Loading] Done in C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI, returning: (weatherapi)
[debug]     Load.loadUnit: loadedProjectsRaw took 248.527ms
[debug]     Load.loadUnit: cleanEvalClasses took 53.8234ms
[debug]   Load.loadUnit(file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/, ...) took 854.5079ms
[debug] Load.apply: load took 860.165ms
[debug] Load.apply: resolveProjects took 0.1205ms
[debug] Load.apply: finalTransforms took 6.8316ms
[debug] Load.apply: config.delegates took 0.2937ms
[debug] Load.apply: Def.make(settings)... took 167.2659ms
[debug] Load.apply: structureIndex took 29.1315ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to WeatherAPI (in build file:/C:/Users/aldie/Documents/ProjectsInteliJ/WeatherAPI/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Users\aldie\Documents\ProjectsInteliJ\WeatherAPI\target\scala-2.13\classes ...
[info] done compiling
